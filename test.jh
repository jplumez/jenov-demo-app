
enum Sexe {
	M, F
} 

entity Localite {
	npa String
    commune String
}

entity Patient {
    noAvs String required
    dateNaissance LocalDate
	nom String
    prenom String
    adresse String
    npaLocalite String
    telephone String
    email String
    numeroAssure String
}

entity CaisseMaladie {
	numeroCaisseMaladie String
    nom String
    adresse String
    npaLocalite String
    telephone String
    fax String
    email String
}

entity Profession {
	nom String
}

entity ProfessionnelSante {
	ide String
    prenom String
    nom String
    sexe Sexe
    rue String
    
}

entity Centre {
	code String required,
    localite String required,
    description String
}

entity Vaccination {
	dateVaccin Instant
}

entity StockVaccin {
	stockInitial Long,
	stockActuel Long
}

relationship OneToMany {
	Patient to Vaccination{personne},
	StockVaccin to Vaccination{stockVaccin},
    Centre to StockVaccin{centre},
    Profession to ProfessionnelSante{profession}
    CaisseMaladie to Patient{caisseMaladie}
    ProfessionnelSante to Patient{medecinTraitant}
}

relationship ManyToOne {
	ProfessionnelSante{localite} to Localite
}

// relationship ManyToMany {
	// Job{task(title)} to Task{job}
// }


// relationship ManyToOne {
	// Employee{manager} to Employee
// }

// defining multiple oneToOne relationships
// relationship OneToOne {
	// JobHistory{job} to Job,
	// JobHistory{department} to Department,
	// JobHistory{employee} to Employee
// }

// Set pagination options
// paginate JobHistory, Employee with infinite-scroll
// paginate Job with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
// service all with serviceImpl except Employee, Job

// Set an angular suffix
// angularSuffix * with mySuffix
